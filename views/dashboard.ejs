<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Admin</title>
    <style>
        /* Define your color palette variables */
        :root {
            --mau-nen: #EEE0FF;
            --white: #FFFFFF;
            --black: #000000;
            --gray: #BDBDBD;
            --red: #E53935;
            --mau-button: #722DD3;
            --blue: #1E88E5;
            --default-text-color: #000000;
            --light-hint: #777777;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--mau-nen); /* N·ªÅn t·ªïng th·ªÉ: T√≠m pastel c·ª±c nh·∫°t */
            margin: 0;
            padding: 0;
            color: var(--default-text-color); /* M√†u ch·ªØ m·∫∑c ƒë·ªãnh */
        }

        .navbar {
            background-color: var(--mau-button); /* M√†u ch√≠nh cho App Bar: T√≠m ƒë·∫≠m */
            padding: 15px 20px;
            color: var(--white); /* Ch·ªØ tr√™n navbar: Tr·∫Øng */
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .navbar h2 {
            margin: 0;
            color: var(--white); /* ƒê·∫£m b·∫£o m√†u ti√™u ƒë·ªÅ tr√™n navbar l√† tr·∫Øng */
        }

        .logout-btn {
            background-color: var(--red); /* N√∫t ƒëƒÉng xu·∫•t: ƒê·ªè */
            color: var(--white); /* Ch·ªØ n√∫t ƒëƒÉng xu·∫•t: Tr·∫Øng */
            padding: 8px 16px;
            border: none;
            border-radius: 8px; /* Bo g√≥c nh·∫π nh√†ng */
            text-decoration: none;
            font-weight: bold;
            cursor: pointer;
            transition: background-color 0.2s ease, transform 0.2s ease;
        }

        .logout-btn:hover {
            background-color: #c82333; /* ƒê·ªè ƒë·∫≠m h∆°n khi hover */
            transform: translateY(-1px);
        }

        .container {
            padding: 30px 50px;
            max-width: 1200px;
            margin: 0 auto; /* CƒÉn gi·ªØa container */
        }

        .admin-info {
            display: flex;
            align-items: center;
            background-color: var(--white); /* N·ªÅn th√¥ng tin admin: Tr·∫Øng */
            padding: 20px;
            border-radius: 12px; /* Bo g√≥c l·ªõn h∆°n */
            box-shadow: 0 4px 12px rgba(0,0,0,0.08); /* B√≥ng ƒë·ªï m·ªÅm m·∫°i h∆°n */
            margin-bottom: 30px;
            border: 1px solid var(--gray); /* Vi·ªÅn nh·∫π */
        }

        .admin-info img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 20px;
            border: 3px solid var(--blue); /* Vi·ªÅn avatar: Xanh d∆∞∆°ng s√°ng */
            box-shadow: 0 0 8px rgba(0, 123, 255, 0.3); /* B√≥ng ƒë·ªï cho avatar */
        }

        .admin-info h3 {
            margin: 0;
            font-size: 22px;
            color: var(--mau-button); /* T√™n admin: T√≠m ƒë·∫≠m */
        }

        .admin-info p {
            margin: 4px 0 0;
            color: var(--light-hint); /* Vai tr√≤: X√°m t·ªëi */
            font-size: 15px;
        }

        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
            gap: 20px;
        }

        .card {
            background-color: var(--white); /* N·ªÅn card: Tr·∫Øng */
            padding: 25px; /* TƒÉng padding */
            border-radius: 12px; /* Bo g√≥c l·ªõn h∆°n */
            box-shadow: 0 4px 10px rgba(0,0,0,0.08); /* B√≥ng ƒë·ªï m·ªÅm m·∫°i */
            text-align: center;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            cursor: pointer;
            position: relative;
            border: 1px solid var(--gray); /* Vi·ªÅn nh·∫π */
        }

        .card:hover {
            transform: translateY(-6px); /* D·ªãch chuy·ªÉn nhi·ªÅu h∆°n khi hover */
            box-shadow: 0 8px 20px rgba(0,0,0,0.15); /* B√≥ng ƒë·ªï r√µ h∆°n khi hover */
        }

        .card h4 {
            margin: 10px 0;
            color: var(--mau-button); /* Ti√™u ƒë·ªÅ card: T√≠m ƒë·∫≠m */
            font-size: 18px;
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 8px;
        }

        .card p {
            font-size: 14px;
            color: var(--default-text-color); /* M√¥ t·∫£ card: ƒêen m·∫∑c ƒë·ªãnh */
            line-height: 1.5;
        }

        .card a {
            text-decoration: none;
            color: inherit;
            display: block;
        }

        .notification-badge {
            background-color: var(--red); /* M√†u ƒë·ªè cho badge */
            color: var(--white); /* Ch·ªØ badge: Tr·∫Øng */
            font-size: 12px;
            font-weight: bold;
            border-radius: 50%;
            padding: 4px 8px;
            min-width: 20px;
            height: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            position: absolute;
            top: 15px;
            right: 15px;
            transform: translate(50%, -50%);
            z-index: 10;
            opacity: 0;
            transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }

        .notification-badge.show {
            opacity: 1;
            transform: translate(50%, -50%) scale(1.1); /* Nh·∫•n nh√° khi hi·ªÉn th·ªã */
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .container {
                padding: 20px;
            }
            .admin-info {
                flex-direction: column;
                text-align: center;
            }
            .admin-info img {
                margin-right: 0;
                margin-bottom: 15px;
            }
            .dashboard-grid {
                grid-template-columns: 1fr; /* Stack cards on small screens */
            }
        }
    </style>
</head>
<body>

    <div class="navbar">
        <h2>Trang Qu·∫£n Tr·ªã FMCarer</h2>
        <form action="/admin/logout" method="POST" style="margin: 0;">
            <button type="submit" class="logout-btn">ƒêƒÉng xu·∫•t</button>
        </form>
    </div>

    <div class="container">

        <% if (admin) { %>
            <div class="admin-info">
                <img src="<%= admin.image || 'https://placehold.co/80x80/722DD3/FFFFFF?text=Admin' %>" alt="Avatar" />
                <div>
                    <h3><%= admin.fullname || admin.username %></h3>
                    <p>Vai tr√≤: <%= admin.role || 'Admin' %></p>
                </div>
            </div>
        <% } else { %>
            <h1>Kh√¥ng t√¨m th·∫•y th√¥ng tin admin</h1>
        <% } %>

        <div class="dashboard-grid">
            <div class="card">
                <a href="/admin/users">
                    <h4>üë• Qu·∫£n l√Ω ng∆∞·ªùi d√πng <span id="user-notification" class="notification-badge"></span></h4>
                    <p>Xem v√† qu·∫£n l√Ω danh s√°ch ph·ª• huynh</p>
                </a>
            </div>

            <div class="card">
                <a href="/admin/posts">
                    <h4>üìù Qu·∫£n l√Ω b√†i vi·∫øt <span id="post-notification" class="notification-badge"></span></h4>
                    <p>Duy·ªát, ch·ªânh s·ª≠a ho·∫∑c xo√° b√†i vi·∫øt</p>
                </a>
            </div>

            <div class="card">
                <a href="/admin/reminders"> <!-- Th√™m href cho card n√†y -->
                    <h4>üìÖ Qu·∫£n l√Ω nh·∫Øc nh·ªü <span id="reminder-notification" class="notification-badge"></span></h4>
                    <p>Th·ªëng k√™ c√°c nh·∫Øc nh·ªü quan tr·ªçng</p>
                </a>
            </div>

            <div class="card">
                <a href="/admin/statistics">
                    <h4>üìä Th·ªëng k√™ h·ªá th·ªëng</h4>
                    <p>Xem t·ªïng s·ªë ng∆∞·ªùi d√πng, b√†i vi·∫øt, tr·∫ª em</p>
                </a>
            </div>

            <div class="card">
                <a href="/admin/settings"> <!-- Th√™m href cho card n√†y -->
                    <h4>‚öôÔ∏è C√†i ƒë·∫∑t h·ªá th·ªëng</h4>
                    <p>C·∫≠p nh·∫≠t c·∫•u h√¨nh chung, vai tr√≤</p>
                </a>
            </div>
        </div>

    </div>

    <script>
        // H√†m ƒë·ªÉ l·∫•y d·ªØ li·ªáu th√¥ng b√°o t·ª´ backend v√† c·∫≠p nh·∫≠t UI
        async function fetchNotifications() {
            try {
                // V√≠ d·ª• c√°c API endpoint b·∫°n c·∫ßn t·∫°o ·ªü backend
                const userResponse = await fetch('/admin/api/notifications/users'); // API tr·∫£ v·ªÅ s·ªë ng∆∞·ªùi d√πng m·ªõi ƒëƒÉng k√Ω/ch∆∞a ƒë∆∞·ª£c duy·ªát
                const postResponse = await fetch('/admin/api/notifications/posts'); // API tr·∫£ v·ªÅ s·ªë b√†i vi·∫øt ch·ªù duy·ªát
                const reminderResponse = await fetch('/admin/api/notifications/reminders'); // API tr·∫£ v·ªÅ s·ªë nh·∫Øc nh·ªü c·∫ßn ch√∫ √Ω

                const userData = await userResponse.json();
                const postData = await postResponse.json();
                const reminderData = await reminderResponse.json();

                updateNotificationBadge('user-notification', userData.count);
                updateNotificationBadge('post-notification', postData.count);
                updateNotificationBadge('reminder-notification', reminderData.count);

            } catch (error) {
                console.error('L·ªói khi t·∫£i th√¥ng b√°o:', error);
                // C√≥ th·ªÉ ·∫©n c√°c badge n·∫øu c√≥ l·ªói ƒë·ªÉ tr√°nh hi·ªÉn th·ªã sai
                updateNotificationBadge('user-notification', 0);
                updateNotificationBadge('post-notification', 0);
                updateNotificationBadge('reminder-notification', 0);
            }
        }

        // H√†m c·∫≠p nh·∫≠t n·ªôi dung v√† hi·ªÉn th·ªã/·∫©n badge
        function updateNotificationBadge(elementId, count) {
            const badge = document.getElementById(elementId);
            if (badge) {
                if (count > 0) {
                    badge.textContent = count;
                    badge.classList.add('show'); // Th√™m class 'show' ƒë·ªÉ hi·ªÉn th·ªã
                } else {
                    badge.textContent = '';
                    badge.classList.remove('show'); // X√≥a class 'show' ƒë·ªÉ ·∫©n
                }
            }
        }

        // T·∫£i th√¥ng b√°o khi trang ƒë∆∞·ª£c load
        document.addEventListener('DOMContentLoaded', fetchNotifications);

        // T·ª± ƒë·ªông t·∫£i l·∫°i th√¥ng b√°o m·ªói 60 gi√¢y (t√πy ch·ªçn)
        // setInterval(fetchNotifications, 60000);
    </script>

</body>
</html>